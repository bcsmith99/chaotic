<Window x:Class="Chaotic.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:Chaotic"
		xmlns:converters="clr-namespace:Chaotic.Converters"
		xmlns:utility="clr-namespace:Chaotic.Utilities"
		mc:Ignorable="d"
		Title="Chaotic"
		Height="600"
		Width="800"
		DataContext="{Binding RelativeSource={RelativeSource Self}}">
	<Window.Resources>
		<ResourceDictionary>
			<converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
			<converters:IsNotNullConverter x:Key="NotNullConverter" />
			<BooleanToVisibilityConverter x:Key="VisibilityConverter"></BooleanToVisibilityConverter>
		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
		</Grid.RowDefinitions>
		<TabControl Grid.Row="1"
					Grid.ColumnSpan="2"
					PreviewKeyDown="TabControl_PreviewKeyDown">
			<TabItem Header="Tasks">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto"
										  MinWidth="200" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<Grid Grid.Row="1"
						  Grid.RowSpan="2">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border Padding="10,0,10,0"
								IsEnabled="{Binding TaskRunning, Converter={StaticResource InverseBooleanConverter}}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<StackPanel Orientation="Horizontal">
									<Button Click="RunAllDailyRotation_Click"
											Margin="0,0,10,0">Run Daily Rotation on All Selected Characters</Button>
									<CheckBox IsChecked="{Binding UserSettings.QuitAfterFullRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											  VerticalAlignment="Center">Quit Game After Complete</CheckBox>
								</StackPanel>

								<StackPanel Orientation="Horizontal"
											Grid.Row="1"
											Margin="0,20,0,0">
									<ComboBox ItemsSource="{Binding UserSettings.Characters}"
											  Margin="0,0,10,0"
											  MinWidth="150"
											  DisplayMemberPath="ClassName"
											  SelectedItem="{Binding CurrentDailySelectedChar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
									<Button Click="RunCharacterDailies_Click"
											Margin="0,0,10,0">Run Daily Rotation</Button>
									<Button Click="RunCharacterUnas_Click"
											Margin="0,0,10,0">Run Unas</Button>
									<Button Click="RunCharacterChaos_Click"
											Margin="0,0,10,0">Run Chaos</Button>
								</StackPanel>

								<Button Click="Test_Click"
										Margin="0,20,0,0"
										Grid.Row="2">Current Test</Button>
							</Grid>
						</Border>
						<Border Padding="10,5,10,0"
								Grid.Row="1">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<WrapPanel Orientation="Horizontal">
									<TextBlock Text="Log - "
											   FontWeight="Bold" />
									<TextBlock VerticalAlignment="Center">
                                    <Hyperlink Click="ClearLog_Click">Clear</Hyperlink>
									</TextBlock>

								</WrapPanel>
								<WrapPanel Orientation="Horizontal"
										   Grid.Column="1"
										   HorizontalAlignment="Right"
										   Visibility="{Binding TaskRunning, Converter={StaticResource VisibilityConverter}}">
									<TextBlock Text="Execution - "
											   FontWeight="Bold" />
									<TextBlock VerticalAlignment="Center">
										<Hyperlink Click="PauseExecution_Click">Toggle Pause</Hyperlink>
										<Hyperlink Click="CancelExecution_Click">Cancel</Hyperlink>
									</TextBlock>

								</WrapPanel>
							</Grid>

						</Border>
						<ListView Padding="10,5,10,0"
								  Grid.Row="2"
								  ItemsSource="{Binding Log.LogEntries}"
								  SelectionChanged="LogView_SelectionChanged"
								  HorizontalContentAlignment="Stretch"
								  SelectedItem="{Binding CurrentLogEntry, UpdateSourceTrigger=PropertyChanged}"
								  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								  ScrollViewer.VerticalScrollBarVisibility="Visible">
							<ListView.ItemTemplate>
								<DataTemplate>
									<!--<TextBlock Text="Test"></TextBlock>-->
									<TextBlock TextWrapping="Wrap">
										<Run Text="{Binding LogDate}" />
										<Run Text=" - " />
										<Run Text="{Binding Entry}" />
									</TextBlock>
								</DataTemplate>
							</ListView.ItemTemplate>

						</ListView>
					</Grid>

					<StackPanel Orientation="Horizontal"
								HorizontalAlignment="Center"
								IsEnabled="{Binding TaskRunning, Converter={StaticResource InverseBooleanConverter}}"
								Grid.Column="1">
						<Button Content="Save"
								Click="SaveUserSettings_Click"
								Margin="5"
								Padding="3" />
						<Button Content="Cancel"
								Click="CancelUserSettings_Click"
								Margin="5"
								Padding="3" />
					</StackPanel>
					<ListBox ItemsSource="{Binding UserSettings.Characters}"
							 Grid.Column="1"
							 Grid.Row="1">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<CheckBox IsChecked="{Binding IsCharSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<CheckBox.Content>
										<TextBlock>
											<TextBlock.Text>
												<MultiBinding StringFormat="{}{0}-{1} (Level: {2})">
													<Binding Path="CharacterIndex"></Binding>
													<Binding Path="ClassName"></Binding>
													<Binding Path="ChaosLevel"></Binding>
												</MultiBinding>
											</TextBlock.Text>
										</TextBlock>
									</CheckBox.Content>
								</CheckBox>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<WrapPanel Orientation="Horizontal"
							   Grid.Column="1"
							   Grid.Row="2"
							   HorizontalAlignment="Center">
						<Label Content="Select:"
							   HorizontalAlignment="Center" />
						<TextBlock VerticalAlignment="Center"
								   Margin="5,0,0,0">
                                    <Hyperlink Click="SelectAll_Click">All</Hyperlink>
						</TextBlock>
						<TextBlock VerticalAlignment="Center"
								   Margin="5,0,0,0">
                                    <Hyperlink Click="SelectNone_Click">None</Hyperlink>
						</TextBlock>
						<TextBlock VerticalAlignment="Center"
								   Margin="5,0,0,0">
                                    <Hyperlink Click="KF_Click">KF</Hyperlink>
						</TextBlock>
						<TextBlock VerticalAlignment="Center"
								   Margin="5,0,0,0">
                                    <Hyperlink Click="CD_Click">CD</Hyperlink>
						</TextBlock>
					</WrapPanel>
				</Grid>
			</TabItem>
			<TabItem Header="Characters"
					 Height="20"
					 VerticalAlignment="Top">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"
										  MinWidth="200" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Orientation="Horizontal"
								Grid.ColumnSpan="3">
						<Button  Click="AddNewCharacter_Click"
								 Margin="5"
								 Padding="3">Add Char</Button>
						<Button  Click="DeleteCharacter_Click"
								 Margin="5"
								 Padding="3"
								 IsEnabled="{Binding CurrentSelectedEditChar, Converter={StaticResource NotNullConverter}}">Delete Char</Button>
						<Button Content="Save"
								Click="SaveUserSettings_Click"
								Margin="5"
								Padding="3" />
						<Button Content="Cancel"
								Click="CancelUserSettings_Click"
								Margin="5"
								Padding="3" />
					</StackPanel>
					<ListView Grid.Row="1"
							  Padding="5"
							  IsSynchronizedWithCurrentItem="True"
							  ItemsSource="{Binding UserSettings.Characters}"
							  SelectedItem="{Binding CurrentSelectedEditChar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<ListView.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation="Vertical">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="120px" />
										</Grid.ColumnDefinitions>
										<TextBlock Text="{Binding ClassName}"></TextBlock>
									</Grid>
								</StackPanel>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>

					<ScrollViewer Grid.Row="1"
								  Grid.Column="1"
								  Padding="5">
						<Grid IsEnabled="{Binding CurrentSelectedEditChar, Converter={StaticResource NotNullConverter}}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="125px" />
								<ColumnDefinition Width="120px" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Label Content="Class"></Label>
							<ComboBox Grid.Column="1"
									  ItemsSource="{Binding AvailableClasses}"
									  SelectedItem="{Binding CurrentSelectedEditChar.ClassName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

							</ComboBox>
							<Label Grid.Row="1"
								   Content="Character Index"></Label>
							<ComboBox Grid.Row="1"
									  Grid.Column="1"
									  ItemsSource="{Binding AvailableIndexes}"
									  SelectedItem="{Binding CurrentSelectedEditChar.CharacterIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

							</ComboBox>
							<Label Grid.Row="2"
								   Content="Chaos Level"></Label>
							<ComboBox Grid.Row="2"
									  Grid.Column="1"
									  ItemsSource="{Binding AvailableChaosLevels}"
									  SelectedItem="{Binding CurrentSelectedEditChar.ChaosLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

							</ComboBox>
							<CheckBox Grid.Row="3"
									  IsChecked="{Binding CurrentSelectedEditChar.IsMain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									  Content="Main Character" />
							<StackPanel Grid.Row="4"
										Grid.ColumnSpan="3">
								<CheckBox VerticalAlignment="Center"
										  Margin="0, 5, 0, 0"
										  IsChecked="{Binding CurrentSelectedEditChar.RunChaos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										  Content="Run Chaos"></CheckBox>
								<CheckBox VerticalAlignment="Center"
										  Margin="10,5,0,0"
										  IsChecked="{Binding CurrentSelectedEditChar.DisableArkPassive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										  Content="Disable Ark Passive"></CheckBox>
								<CheckBox VerticalAlignment="Center"
										  Content="Enable Guild	"
										  Margin="0,5,0,0"
										  IsChecked="{Binding CurrentSelectedEditChar.GuildDonation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								<CheckBox VerticalAlignment="Center"
										  Content="Donate Silver"
										  Margin="10,5,0,0"
										  IsEnabled="{Binding CurrentSelectedEditChar.GuildDonation}"
										  IsChecked="{Binding CurrentSelectedEditChar.GuildDonationSilver, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								<CheckBox VerticalAlignment="Center"
										  Content="Donate Gold"
										  Margin="10,5,0,0"
										  IsEnabled="{Binding CurrentSelectedEditChar.GuildDonation}"
										  IsChecked="{Binding CurrentSelectedEditChar.GuildDonationGold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>

								<CheckBox VerticalAlignment="Center"
										  Margin="0,5,0,0"
										  Content="Una Tasks"
										  IsChecked="{Binding CurrentSelectedEditChar.RunUnas, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								<StackPanel Orientation="Vertical"
											IsEnabled="{Binding CurrentSelectedEditChar.RunUnas}">
									<WrapPanel Orientation="Horizontal"
											   Margin="10,5,0,0">
										<CheckBox VerticalAlignment="Center"
												  Content="Lopang"
												  IsChecked="{Binding CurrentSelectedEditChar.RunLopangUnas, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="10,0,0,0"
												  Content="Run Shushire Only"
												  IsChecked="{Binding CurrentSelectedEditChar.RunLopangShushireOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												  IsEnabled="{Binding CurrentSelectedEditChar.RunLopangUnas}" />

									</WrapPanel>

									<Grid Margin="10, 0, 0, 0"
										  IsEnabled="{Binding CurrentSelectedEditChar.RunLopangUnas, Converter={StaticResource InverseBooleanConverter}}">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<WrapPanel Orientation="Horizontal">
											<Label>Una Task</Label>
											<ComboBox ItemsSource="{Binding AvailableUnaTaskNames}"
													  Width="100px"
													  SelectedItem="{Binding CurrentSelectedEditChar.FirstUnaTask.UnaName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											</ComboBox>
											<Label>Bifrost</Label>
											<ComboBox ItemsSource="{Binding AvailableBifrosts}"
													  Width="50px"
													  SelectedItem="{Binding CurrentSelectedEditChar.FirstUnaTask.BifrostPosition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											</ComboBox>
										</WrapPanel>
										<WrapPanel Orientation="Horizontal"
												   Grid.Row="1">
											<Label>Una Task</Label>
											<ComboBox ItemsSource="{Binding AvailableUnaTaskNames}"
													  Width="100px"
													  SelectedItem="{Binding CurrentSelectedEditChar.SecondUnaTask.UnaName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											</ComboBox>
											<Label>Bifrost</Label>
											<ComboBox ItemsSource="{Binding AvailableBifrosts}"
													  Width="50px"
													  SelectedItem="{Binding CurrentSelectedEditChar.SecondUnaTask.BifrostPosition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											</ComboBox>
										</WrapPanel>
										<WrapPanel Orientation="Horizontal"
												   Grid.Row="2">
											<Label>Una Task</Label>
											<ComboBox ItemsSource="{Binding AvailableUnaTaskNames}"
													  Width="100px"
													  SelectedItem="{Binding CurrentSelectedEditChar.ThirdUnaTask.UnaName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											</ComboBox>
											<Label>Bifrost</Label>
											<ComboBox ItemsSource="{Binding AvailableBifrosts}"
													  Width="50px"
													  SelectedItem="{Binding CurrentSelectedEditChar.ThirdUnaTask.BifrostPosition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											</ComboBox>
										</WrapPanel>

									</Grid>
								</StackPanel>

								<CheckBox VerticalAlignment="Center"
										  Margin="0,5,0,0"
										  Content="Buy Solo Mode Shop"
										  IsChecked="{Binding CurrentSelectedEditChar.BuySoloMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								<StackPanel Orientation="Vertical"
											IsEnabled="{Binding CurrentSelectedEditChar.BuySoloMode}">
									<WrapPanel Orientation="Horizontal"
											   Margin="10,5,0,0">
										<Label>Solo Shop Bifrost</Label>
										<ComboBox ItemsSource="{Binding AvailableBifrosts}"
												  Width="50px"
												  SelectedItem="{Binding CurrentSelectedEditChar.SoloModeBifrost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										</ComboBox>
									</WrapPanel>

									<StackPanel Margin="10, 0, 0, 0">
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Prime Oreha"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloPrimeOreha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Superior Oreha"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloSuperiorOreha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Oreha"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloOreha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Radiant Leaps"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloRadiantLeaps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Marvelous Leaps"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloMarvelousLeaps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Honor Shards"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloHonorShards, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Refined Protection Stones"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloRefinedProtection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
										<CheckBox VerticalAlignment="Center"
												  Margin="0,5,0,0"
												  Content="Buy Refined Obliteration Stones"
												  IsChecked="{Binding CurrentSelectedEditChar.BuySoloRefinedObliteration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>

									</StackPanel>
								</StackPanel>

							</StackPanel>
						</Grid>
					</ScrollViewer>

					<ScrollViewer Grid.Row="1"
								  Grid.Column="2"
								  Padding="5">
						<StackPanel Orientation="Vertical"
									IsEnabled="{Binding CurrentSelectedEditChar, Converter={StaticResource NotNullConverter}}">
							<WrapPanel Orientation="Horizontal">
								<Label FontWeight="Bold"
									   FontSize="14">Skills -</Label>
								<TextBlock VerticalAlignment="Center">
                                    <Hyperlink Click="CaptureSkills_Click">Capture Skills</Hyperlink>
								</TextBlock>
							</WrapPanel>
							<WrapPanel Orientation="Horizontal">
								<TextBlock Text="{Binding UserSettings.Resolution, StringFormat=Currently displaying skills for {0}}"
										   Margin="5,0,0,0"
										   FontSize="10px" />

							</WrapPanel>

							<local:SkillControl Skill="{Binding CurrentQSkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentWSkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentESkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentRSkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentASkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentSSkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentDSkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentFSkill, UpdateSourceTrigger=PropertyChanged}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentHyperSkill}"
												Visibility="{Binding CurrentSelectedEditChar.HasHyperSkill, Converter={StaticResource VisibilityConverter}}"></local:SkillControl>
							<local:SkillControl Skill="{Binding CurrentAwakening}"></local:SkillControl>
						</StackPanel>
					</ScrollViewer>
				</Grid>
			</TabItem>
			<TabItem Header="Statistics">
				<local:StatisticsControl />
			</TabItem>
			<TabItem Header="Settings">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Orientation="Horizontal">
						<Button Content="Save"
								Click="SaveUserSettings_Click"
								Margin="5"
								Padding="3" />
						<Button Content="Cancel"
								Click="CancelUserSettings_Click"
								Margin="5"
								Padding="3" />
					</StackPanel>
					<ScrollViewer Padding="5"
								  Grid.Row="1">
						<StackPanel Orientation="Vertical">
							<Label Content="General"
								   FontSize="16"
								   FontWeight="Bold"></Label>
							<Grid Margin="10,0,0,0">
								<Grid.Resources>
									<Style TargetType="Border">
										<Setter Property="Padding"
												Value="2,2,2,2" />
									</Style>
								</Grid.Resources>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="200"></ColumnDefinition>
									<ColumnDefinition Width="150"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<Border>
									<Label>Screen Resolution</Label>
								</Border>
								<Border Grid.Column="1">
									<ComboBox IsSynchronizedWithCurrentItem="True"
											  ItemsSource="{Binding Resolutions}"
											  SelectedItem="{Binding UserSettings.Resolution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											  SelectionChanged="Resolution_SelectionChanged" />
								</Border>
								<Border Grid.Row="1">
									<Label>Log Detail Level</Label>
								</Border>
								<Border Grid.Column="1"
										Grid.Row="1">
									<ComboBox IsSynchronizedWithCurrentItem="True"
											  ItemsSource="{Binding LogLevels}"
											  DisplayMemberPath="Item1"
											  SelectedValuePath="Item2"
											  SelectedValue="{Binding UserSettings.LogDetailLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											  SelectionChanged="LogDetailLevel_SelectionChanged" />
								</Border>
								<Border Grid.Row="2">
									<Label>Health Potion Percentage</Label>
								</Border>
								<Border Grid.Row="2"
										Grid.Column="1">
									<TextBox Text="{Binding UserSettings.UsePotionPercent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 VerticalContentAlignment="Center" />
								</Border>
								<Border Grid.Row="3">
									<Label Grid.Row="2">Health Potion Key</Label>
								</Border>
								<Border Grid.Row="3"
										Grid.Column="1">
									<!--<ComboBox ItemsSource="{Binding TopRowAvailableKeys}"
											  SelectedValue="{Binding UserSettings.HealthPotionKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											  SelectedValuePath="Key"
											  DisplayMemberPath="Display"></ComboBox>-->
									<TextBox Text="{Binding UserSettings.HealthPotionKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 VerticalContentAlignment="Center" />
								</Border>
								<Border Grid.Row="4"
										Grid.ColumnSpan="2">
									<CheckBox Content="Start daily rotation by going offline"
											  Margin="5,5,0,0"
											  VerticalAlignment="Center"
											  IsChecked="{Binding UserSettings.GoOffline, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								</Border>
							</Grid>

							<Label Content="Aura"
								   FontSize="16"
								   FontWeight="Bold"
								   Margin="0,10,0,0"></Label>
							<Grid Margin="10,0,0,0">
								<Grid.Resources>
									<Style TargetType="Border">
										<Setter Property="Padding"
												Value="2,2,2,2" />
									</Style>
								</Grid.Resources>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="200"></ColumnDefinition>
									<ColumnDefinition Width="150"></ColumnDefinition>
								</Grid.ColumnDefinitions>
								<Border>
									<CheckBox Content="Enable Aura Features"
											  FontWeight="Bold"
											  IsChecked="{Binding UserSettings.EnableAura, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								</Border>

								<Border Grid.Row="1"
										Margin="10,0,0,0"
										IsEnabled="{Binding UserSettings.EnableAura}">
									<CheckBox Content="Repair Gear"
											  VerticalAlignment="Center"
											  IsChecked="{Binding UserSettings.RepairGear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								</Border>
								<Border Grid.Row="2"
										Margin="10,0,0,0"
										IsEnabled="{Binding UserSettings.EnableAura}">
									<CheckBox Content="Move Gems"
											  VerticalAlignment="Center"
											  IsChecked="{Binding UserSettings.MoveGems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								</Border>
								<Border Grid.Row="2"
										Grid.Column="1"
										IsEnabled="{Binding UserSettings.EnableAura}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Label Content="Threshold"></Label>
										<ComboBox IsSynchronizedWithCurrentItem="True"
												  Grid.Column="1"
												  ItemsSource="{Binding GemLevels}"
												  DisplayMemberPath="Item1"
												  SelectedValuePath="Item2"
												  SelectedValue="{Binding UserSettings.GemLevelThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										</ComboBox>
									</Grid>
								</Border>
								<Border Grid.Row="3"
										Margin="10,0,0,0"
										IsEnabled="{Binding UserSettings.EnableAura}">
									<CheckBox Content="Move Honing Materials"
											  VerticalAlignment="Center"
											  IsChecked="{Binding UserSettings.MoveHoningMaterials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
								</Border>
							</Grid>

							<Label Content="Key Bindings"
								   FontSize="16"
								   FontWeight="Bold"
								   Margin="0,10,0,0"></Label>
							<Grid Margin="10,0,0,0">
								<Grid.Resources>
									<Style TargetType="Border">
										<Setter Property="Padding"
												Value="0,5,0,5" />
									</Style>
								</Grid.Resources>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="200px" />
									<ColumnDefinition Width="100px" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Label Content="Interact (G)"></Label>
								<Border Grid.Column="1">
									<ComboBox ItemsSource="{Binding AllAvailableKeys}"
											  SelectedValuePath="Key"
											  DisplayMemberPath="Display"></ComboBox>
								</Border>
								<Label Content="Special 1 (Z)"
									   Grid.Row="1"></Label>
								<Border Grid.Column="1"
										Grid.Row="1">
									<ComboBox ItemsSource="{Binding AllAvailableKeys}"
											  SelectedValuePath="Key"
											  DisplayMemberPath="Display"></ComboBox>
								</Border>
								<Label Content="Special 2 (X)"
									   Grid.Row="2"></Label>
								<Border Grid.Column="1"
										Grid.Row="2">
									<ComboBox ItemsSource="{Binding AllAvailableKeys}"
											  SelectedValuePath="Key"
											  DisplayMemberPath="Display"></ComboBox>
								</Border>

							</Grid>
						</StackPanel>
					</ScrollViewer>
				</Grid>
			</TabItem>

		</TabControl>
	</Grid>
</Window>
